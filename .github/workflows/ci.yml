name: CI/CD

on:
  push:
    branches: [main, develop]
    tags:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x, 22.x, 24.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Test package installation
        shell: bash
        run: |
          npm pack
          TARBALL=$(ls zibdie-ssh-mcp-*.tgz)
          npm install -g "./$TARBALL"
          ssh-mcp --help || echo "CLI test complete"

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Install DXT and test MCP server
        run: |
          npm install -g @modelcontextprotocol/inspector
          echo '{"jsonrpc": "2.0", "id": 1, "method": "tools/list"}' | node index.js || true
          echo "DXT integration test complete"

      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "Setting version to: $VERSION"
          
          # Set version in package.json
          npm version $VERSION --no-git-tag-version
          
          # Update manifest.json version to match
          sed -i.bak "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" manifest.json
          rm -f manifest.json.bak

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
      
      - name: Install DXT CLI
        run: npm install -g @anthropic-ai/dxt
      
      - name: Create DXT package
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          dxt pack --name="zibdie-ssh-mcp-${COMMIT_HASH}.dxt"
      
      - name: Upload DXT package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dxt-package
          path: "zibdie-ssh-mcp-*.dxt"
          retention-days: 7
      
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          
          # Create release notes
          cat > release_notes.md << EOF
          # SSH MCP Server v$VERSION
          
          Cross-platform MCP server for SSH connections with comprehensive remote server management tools.
          
          ## Installation
          
          \`\`\`bash
          # Via Claude CLI (Recommended)
          claude mcp add ssh-mcp npx '@zibdie/ssh-mcp@$VERSION'
          
          # Via npm
          npm install -g @zibdie/ssh-mcp@$VERSION
          \`\`\`
          
          ## What's Included
          
          - **SSH Connection Management**: Connect to multiple servers simultaneously
          - **Command Execution**: Run commands and scripts remotely
          - **File Operations**: Upload, download, and list files via SFTP  
          - **Script Execution**: Run bash, python, and other scripts
          - **Cross-platform**: Works on Windows, macOS, and Linux
          
          ## Usage
          
          After installation, you can use natural language to:
          - "Connect to my server at example.com with username myuser"
          - "Upload this file to my remote server"
          - "Run a system update on my Ubuntu server"
          - "Download the logs from /var/log/"
          
          ## Package Information
          
          - **npm**: [@zibdie/ssh-mcp@$VERSION](https://www.npmjs.com/package/@zibdie/ssh-mcp)
          - **DXT Package**: Available as artifact for testing with MCP Inspector
          EOF
          
          # Create the release
          gh release create $GITHUB_REF_NAME \
            --title "SSH MCP Server v$VERSION" \
            --notes-file release_notes.md \
            --latest \
            zibdie-ssh-mcp-*.dxt
