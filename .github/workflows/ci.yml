name: CI/CD

on:
  push:
    branches: [main, develop]
    tags:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x, 22.x, 24.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Test package installation
        shell: bash
        run: |
          npm pack
          TARBALL=$(ls zibdie-ssh-mcp-*.tgz)
          npm install -g "./$TARBALL"
          ssh-mcp --help || echo "CLI test complete"

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Install DXT and test MCP server
        run: |
          npm install -g @modelcontextprotocol/inspector
          echo '{"jsonrpc": "2.0", "id": 1, "method": "tools/list"}' | node index.js || true
          echo "DXT integration test complete"

      - name: Update version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
      
      - name: Install DXT CLI
        run: npm install -g @anthropic-ai/dxt
      
      - name: Create DXT package
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          dxt pack --name="zibdie-ssh-mcp-${COMMIT_HASH}.dxt"
      
      - name: Upload DXT package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dxt-package
          path: "zibdie-ssh-mcp-*.dxt"
          retention-days: 7
